       <!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title></title>
		    <style>
		        /* 调整表格的单元格大小 */
		        table {
		            width: 95%;
		            border-collapse: collapse;
		            margin: 20px auto;
		        }
		
		        th, td {
		            width: 100px;  /* 设置单元格的宽度 */
		            height: 50px;  /* 设置单元格的高度 */
		            text-align: center;
		            font-size: 10px;
		            border: 2px solid black;  /* 表格边框 */
		        }
		    </style>
	</head>
	<body>
        <h1>三文鱼家族原料感官检测表</h1>
    
        <!-- 表格 -->
        <table border="1" id="myTable">
            <tr>
                <th>样本</th>
                <th>标注净重（kg）</th>
                <th>规格（kg）</th>
				<th>批号</th>
				<th>生产日期</th>
				<th>带冰衣重（kg）</th>
				<th>体色</th>
				<th>气味</th>
				<th>眼睛</th>
				<th>鱼鳞</th>
				<th>鱼鳃</th>
				<th>内脏</th>
				<th>鱼腹</th>
				<th>条数</th>
            </tr>
            <tr>
                <td id="r1c1"></td>
                <td id="r1c2"></td>
                <td id="r1c3"></td>
                <td id="r1c4"></td>
				<td id="r1c5"></td>
				<td id="r1c6"></td>
				<td id="r1c7"></td>
				<td id="r1c8"></td>
				<td id="r1c9"></td>
				<td id="r1c10"></td>
				<td id="r1c11"></td>
				<td id="r1c12"></td>
				<td id="r1c13"></td>
				<td id="r1c14"></td>					
            </tr>
            <tr>
                <td id="r2c1"></td>
                <td id="r2c2"></td>
                <td id="r2c3"></td>
                <td id="r2c4"></td>
                <td id="r2c5"></td>
                <td id="r2c6"></td>
                <td id="r2c7"></td>
                <td id="r2c8"></td>
                <td id="r2c9"></td>
                <td id="r2c10"></td>
                <td id="r2c11"></td>
                <td id="r2c12"></td>
                <td id="r2c13"></td>
                <td id="r2c14"></td>
            </tr>
            <tr>
                <td id="r3c1"></td>
                <td id="r3c2"></td>
                <td id="r3c3"></td>
                <td id="r3c4"></td>
                <td id="r3c5"></td>
                <td id="r3c6"></td>
                <td id="r3c7"></td>
                <td id="r3c8"></td>
                <td id="r3c9"></td>
                <td id="r3c10"></td>
                <td id="r3c11"></td>
                <td id="r3c12"></td>
                <td id="r3c13"></td>
                <td id="r3c14"></td>
            </tr>
        </table>

    <b id="remind"></b>
       <b id="test"></b>
        
    

           
             <script>//控制台可报错，可查看属性(用console.log)
             let flag=false;
        let audioChunks = [];
        const intervalTime = 200; 
         const twoSecondsIntervals = 2000 / intervalTime;
        // 音量阈值，可根据实际情况调整
        const volumeThreshold = 128; 

        async function startRecording() {  
            try {
                document.getElementById("remind") .innerHTML = "正在录音";
                flag=false;
                let lastLoudTime = Date.now();
                let recentVolumeData = [];
                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
                const mediaRecorder = new MediaRecorder(stream);
                const audioContext = new AudioContext();
                const source = audioContext.createMediaStreamSource(stream);
                const analyser = audioContext.createAnalyser();
                source.connect(analyser);
                mediaRecorder.start();


                mediaRecorder.ondataavailable = function (e) {//stop时才会触发事件
                    audioChunks.push(e.data);
                };

                function checkVolume() {
                    const bufferLength = analyser.frequencyBinCount;
                    const dataArray = new Uint8Array(bufferLength);
                    analyser.getByteTimeDomainData(dataArray);
                    let sum = 0;
                    for (let i = 0; i < bufferLength; i++) {
                        sum += dataArray[i];
                    }
                    const averageVolume = sum / bufferLength;

                    recentVolumeData.push(averageVolume);
                    if (recentVolumeData.length > twoSecondsIntervals) {
                        recentVolumeData.shift();
                    }





                    if (recentVolumeData.length === twoSecondsIntervals &&
                        recentVolumeData.every(volume => volume < volumeThreshold)) {
                        console.log('2秒内音量低于阈值，停止录音');
                        document.getElementById("remind") .innerHTML = "请稍等";
                        mediaRecorder.stop();
                    }


                }//check结束

                const volumeCheckInterval = setInterval(checkVolume,intervalTime ); // 每200毫秒检查一次音量，瞬间完成，异步
                mediaRecorder.onstop = function () {
                    clearInterval(volumeCheckInterval);
                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                            handleAudioBlob(audioBlob);
                            audioChunks = [];
                            while(flag)
                            break;
                            startRecording();//递归调用，就不需要循环了
                            

                };
            } catch (error) {
                console.error('获取音频流失败：', error);
            }
        }//start结束

        function handleAudioBlob(blob) {
            
            const formData = new FormData();
            formData.append('audio', blob, 'recording.wav');

         fetch('/python', {//.then保证同步，但是内部同步，对外部异步（半同步）
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json(); 
            })
            .then(data => {
                console.log(5)
                flag=true;
            })
            .catch(error => {
                console.error('Error:', error);
            });


        }

        startRecording();

    </script>
	</body>
</html>