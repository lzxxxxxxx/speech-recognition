       <!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title></title>
		    <style>
		        /* 调整表格的单元格大小 */
		        table {
		            width: 95%;
		            border-collapse: collapse;
		            margin: 20px auto;
		        }
		
		        th, td {
		            width: 100px;  /* 设置单元格的宽度 */
		            height: 50px;  /* 设置单元格的高度 */
		            text-align: center;
		            font-size: 10px;
		            border: 2px solid black;  /* 表格边框 */
		        }
		    </style>
	</head>
	<body>
        <h1>三文鱼家族原料感官检测表</h1>
    
        <!-- 表格 -->
        <table border="1" id="myTable">
            <tr>
                <th>样本</th>
                <th>标注净重（kg）</th>
                <th>规格（kg）</th>
				<th>批号</th>
				<th>生产日期</th>
				<th>带冰衣重（kg）</th>
				<th>体色</th>
				<th>气味</th>
				<th>眼睛</th>
				<th>鱼鳞</th>
				<th>鱼鳃</th>
				<th>内脏</th>
				<th>鱼腹</th>
				<th>条数</th>
            </tr>
            <tr>
                <td id="r1c1"></td>
                <td id="r1c2"></td>
                <td id="r1c3"></td>
                <td id="r1c4"></td>
				<td id="r1c5"></td>
				<td id="r1c6"></td>
				<td id="r1c7"></td>
				<td id="r1c8"></td>
				<td id="r1c9"></td>
				<td id="r1c10"></td>
				<td id="r1c11"></td>
				<td id="r1c12"></td>
				<td id="r1c13"></td>
				<td id="r1c14"></td>					
            </tr>
            <tr>
                <td id="r2c1"></td>
                <td id="r2c2"></td>
                <td id="r2c3"></td>
                <td id="r2c4"></td>
                <td id="r2c5"></td>
                <td id="r2c6"></td>
                <td id="r2c7"></td>
                <td id="r2c8"></td>
                <td id="r2c9"></td>
                <td id="r2c10"></td>
                <td id="r2c11"></td>
                <td id="r2c12"></td>
                <td id="r2c13"></td>
                <td id="r2c14"></td>
            </tr>
            <tr>
                <td id="r3c1"></td>
                <td id="r3c2"></td>
                <td id="r3c3"></td>
                <td id="r3c4"></td>
                <td id="r3c5"></td>
                <td id="r3c6"></td>
                <td id="r3c7"></td>
                <td id="r3c8"></td>
                <td id="r3c9"></td>
                <td id="r3c10"></td>
                <td id="r3c11"></td>
                <td id="r3c12"></td>
                <td id="r3c13"></td>
                <td id="r3c14"></td>
            </tr>
        </table>
    <b id="remind"></b>
       <b id="test"></b>
        <br>
    

           <script>

           let count = 0;
        const counterDiv = document.getElementById("test");
        const intervalId = setInterval(() => {
            count++;
            counterDiv.textContent = count;
        }, 1000);
        window.addEventListener('load', function () {
         document.getElementById("remind").innerHTML = "正在接听";
            // 请求获取用户音频输入（麦克风）权限
            navigator.mediaDevices.getUserMedia({ audio: true })
             .then(function (stream) {
                    let audioChunks = [];
                    const audioContext = new AudioContext();
                    const source = audioContext.createMediaStreamSource(stream);
                    const analyser = audioContext.createAnalyser();
                    source.connect(analyser);

                    const mediaRecorder = new MediaRecorder(stream);
                    mediaRecorder.ondataavailable = event => {
                    audioChunks.push(event.data);
                    };
                   /* const audioChunks = [];

                    mediaRecorder.addEventListener('dataavailable', function (event) {
                        if (event.data.size > 0) {
                            audioChunks.push(event.data);
                        }
                    });*/

                    // 开始录音
                    mediaRecorder.start();
                    // 用于存储音量数据的数组
                    const volumeData = [];
                    const sampleRate = audioContext.sampleRate;
                    const bufferLength = analyser.frequencyBinCount;
                    const dataArray = new Uint8Array(bufferLength);

                    const checkVolumeInterval = setInterval(() => {
                        analyser.getByteTimeDomainData(dataArray);
                        let sum = 0;
                        for (let i = 0; i < bufferLength; i++) {
                            sum += dataArray[i];
                        }
                        const averageVolume = sum / bufferLength;
                        volumeData.push(averageVolume);

                        if (volumeData.length > sampleRate * 2) {
                            volumeData.shift();
                        }
                        const isQuietForTwoSeconds = volumeData.every((volume) => volume < 130);
                        if (isQuietForTwoSeconds) {
                            //console.log('两秒内没说话，执行操作');

                            document.getElementById("remind").innerHTML = "请稍等";
                           const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                           const formData = new FormData();
                           formData.append('audio', audioBlob, 'recording.wav');

                            fetch('/python', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json(); 
            })
            .then(data => {//then可保证同步执行
            if(data.content=="end")
            //停止录音
            document.getElementById("r1c2").innerHTML = data.content;
            })
            .catch(error => {
                console.error('Error:', error);
            });




                            // 这里可以添加你想要执行的操作，比如停止录音、发送数据等
                            clearInterval(checkVolumeInterval);
                            // 重新开始检查音量的逻辑（这里重新启动整个流程来模拟继续录音）
                            window.location.reload();
                        }
                        else
                        alert('4')
                    }, 2000);
                })
             .catch(function (error) {
                    console.error('无法获取麦克风权限:', error);
                });
        });

		</script>
		

	</body>
</html>