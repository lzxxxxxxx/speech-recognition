<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title></title>
		    <style>
		        /* 调整表格的单元格大小 */
		        table {
		            width: 95%;
		            border-collapse: collapse;
		            margin: 20px auto;
		        }
		
		        th, td {
		            width: 100px;  /* 设置单元格的宽度 */
		            height: 50px;  /* 设置单元格的高度 */
		            text-align: center;
		            font-size: 10px;
		            border: 2px solid black;  /* 表格边框 */
		        }
		    </style>
	</head>
	<body>
        <h1>三文鱼家族原料感官检测表</h1>
    
        <!-- 表格 -->
        <table border="1" id="myTable">
            <tr>
                <th>样本</th>
                <th>标注净重（kg）</th>
                <th>规格（kg）</th>
				<th>批号</th>
				<th>生产日期</th>
				<th>带冰衣重（kg）</th>
				<th>体色</th>
				<th>气味</th>
				<th>眼睛</th>
				<th>鱼鳞</th>
				<th>鱼鳃</th>
				<th>内脏</th>
				<th>鱼腹</th>
				<th>条数</th>
            </tr>
            <tr>
                <td id="r1c1"></td>
                <td id="r1c2"></td>
                <td id="r1c3"></td>
                <td id="r1c4"></td>
				<td id="r1c5"></td>
				<td id="r1c6"></td>
				<td id="r1c7"></td>
				<td id="r1c8"></td>
				<td id="r1c9"></td>
				<td id="r1c10"></td>
				<td id="r1c11"></td>
				<td id="r1c12"></td>
				<td id="r1c13"></td>
				<td id="r1c14"></td>					
            </tr>
            <tr>
                <td id="r2c1"></td>
                <td id="r2c2"></td>
                <td id="r2c3"></td>
                <td id="r2c4"></td>
                <td id="r2c5"></td>
                <td id="r2c6"></td>
                <td id="r2c7"></td>
                <td id="r2c8"></td>
                <td id="r2c9"></td>
                <td id="r2c10"></td>
                <td id="r2c11"></td>
                <td id="r2c12"></td>
                <td id="r2c13"></td>
                <td id="r2c14"></td>
            </tr>
            <tr>
                <td id="r3c1"></td>
                <td id="r3c2"></td>
                <td id="r3c3"></td>
                <td id="r3c4"></td>
                <td id="r3c5"></td>
                <td id="r3c6"></td>
                <td id="r3c7"></td>
                <td id="r3c8"></td>
                <td id="r3c9"></td>
                <td id="r3c10"></td>
                <td id="r3c11"></td>
                <td id="r3c12"></td>
                <td id="r3c13"></td>
                <td id="r3c14"></td>
            </tr>
        </table>
    
        <br>
    
            <button onclick="startRecording_1()">位置_开始录音</button>
            <button onclick="stopRecording_1()">位置_停止录音</button>
            <button onclick="startRecording_2()">内容_开始录音</button>
            <button onclick="stopRecording_2()">内容_停止录音</button>
    
        <script>
            var loc="";
			let mediaRecorder;
            let audioChunks = [];

            async function startRecording_1() {
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            mediaRecorder = new MediaRecorder(stream);

            mediaRecorder.ondataavailable = event => {
               audioChunks.push(event.data);
             };

    mediaRecorder.onstop = async () => {
        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
        audioChunks = [];
        const formData = new FormData();
        formData.append('audio', audioBlob, 'recording.wav');

        await fetch('/python', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json(); 
            })
            .then(data => {
                loc=data.content;
                document.getElementById(loc) .style.backgroundColor = "yellow";
            })
            .catch(error => {
                console.error('Error:', error);
            });
    };

    mediaRecorder.start();
}

function stopRecording_1() {
    mediaRecorder.stop();
}



async function startRecording_2() {
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            mediaRecorder = new MediaRecorder(stream);

            mediaRecorder.ondataavailable = event => {
               audioChunks.push(event.data);
             };

    mediaRecorder.onstop = async () => {
        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
        audioChunks = [];
        const formData = new FormData();
        formData.append('audio', audioBlob, 'recording.wav');

        await fetch('/python', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json(); 
            })
            .then(data => {
                document.getElementById(loc).innerHTML = data.content;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    };

    mediaRecorder.start();
}

function stopRecording_2() {
    mediaRecorder.stop();
}
            

		</script>
		

	</body>
</html>